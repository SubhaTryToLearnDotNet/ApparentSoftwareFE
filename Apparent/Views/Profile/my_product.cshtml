
@model ViewModel

@{
    ViewBag.Title = "my_product";
    var CompanyName = Session["FirstName"].ToString();

}
<div class="user_page">
    <div class="container">
        <div class="row">
            @Html.Partial("~/Views/Shared/Components/_CustomarProfile.cshtml", Model)
            <!-- /.col -->

            <div class="col-md-9">
                <div class="tab-content" id="v-pills-tabContent">



                    <div class="card tab-pane fade active" id="v-pills-products" role="tabpanel" aria-labelledby="v-pills-products-tab">
                        @*<a data-toggle="collapse" href="#v-collapse-products" aria-expanded="false" aria-controls="v-collapse-products">
                                <div class="card-header" role="tab" id="v-collapse-heading-products">My Product<i class="fa fa-angle-down" aria-hidden="true"></i></div>
                            </a>*@
                        @*<div id="v-collapse-products" class="collapse" role="tabpanel" aria-labelledby="v-collapse-heading-products" data-parent="#v-pills-tabContent">*@
                        <div class="card-body">
                            <h4 class="mb-4">My Products</h4>
                            <div data-tab="home" class="tabs__tab">
                                <div class="row">
                                    @if (Model.Products.Count > 0)
                                    {
                                        foreach (Apparent.Model.ProductMaster product in Model.Products)
                                        {
                                            <div class="col-lg-4 col-md-4 col-12">
                                                <a target="_blank" href="/product/another?ProductId=@product.ProductId&PlanId=@product.GetSubscription.Plan_uniqueId">
                                                    <div class="softRowIn">
                                                        <div class="softRowBox">
                                                            <span>@product.ProductName</span>
                                                            <div class="softRowBox_btm">
                                                                <div class="softRowBox_btm_pic">
                                                                    <img src="@(product.ProductIcon)" alt="" />
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="BoxShadows"><img src="~/Content/assets/images/shadow.png" alt="" /></div>
                                                    </div>
                                                </a>
                                            </div>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                        @*</div>*@
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/slim-select/1.21.0/slimselect.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert-dev.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.css">

<!--  progress script -->
<script>
    const progress = document.querySelector(".progress-done");

    progress.style.width = progress.getAttribute("data-done") + "%";
    progress.style.opacity = 1;
</script>

<!--  tab script -->
<script>
    const tabsBtns = Array.from(document.querySelectorAll("[data-tab-id]"));
    const tabs = Array.from(document.querySelectorAll("[data-tab]"));

    let selectedTab = tabsBtns[0].dataset.tabId;

    const hideTabs = () => {
        tabs
            .filter((tab) => tab.dataset.tab !== selectedTab)
            .forEach((tab) => {
                tab.classList.add("tabs__tab--hide");
            });

        tabsBtns
            .filter((tab) => tab.dataset.tabId !== selectedTab)
            .forEach((tab) => {
                tab.classList.add("tabs__tab-btn--not-selected");
            });
    };
    hideTabs();

    const handleSelectTab = (e) => {
        selectedTab = e.target.dataset.tabId;

        tabs.forEach((tab) => {
            tab.classList.remove("tabs__tab--hide");
        });

        tabsBtns.forEach((tab) => {
            tab.classList.remove("tabs__tab-btn--not-selected");
        });

        hideTabs();
    };

    tabsBtns.forEach((btn) => {
        btn.addEventListener("click", handleSelectTab);
    });

</script>



@if (TempData["ProductaddSuccess"] != null && TempData["ProductaddSuccess"].ToString() == "Product Add Successful")
{
    <script>
        swal({
            title: "Success",
            text: "Product added successful",
            type: "success"
        })
    </script>
}
@if (TempData["FreeTrialMSG"] != null && TempData["FreeTrialMSG"].ToString() == "Congratulations!Product Free Trial is Activate")
{
    <script>
        swal({
            title: "Success",
            text: "Congratulations!Product free trial is activate",
            type: "success"
        });
    </script>
}

@if (TempData["SubscriptionUpdateMsg"] != null && TempData["SubscriptionUpdateMsg"].ToString() == "Subscription updated successfully.")
{
    <script>
        swal({
            title: "Success",
            text: "Subscription updated successfull.",
            type: "success"
        });
    </script>
}

